// AUTOMATICALLY GENERATED by sbt-rats - EDIT AT YOUR OWN RISK

package whiley

import whiley.WhileyISyntax._
import org.bitbucket.inkytonik.kiama.output.{PrettyPrinter => PP, ParenPrettyPrinter => PPP}
import org.bitbucket.inkytonik.kiama.output.PrettyPrinterTypes.{Document, Width}

trait WhileyIPrettyPrinter extends PP with PPP {

    
    def show (astNode : ASTNode, w : Width = defaultWidth) : String =
        format (astNode, w).layout
    
    def format (astNode : ASTNode, w : Width = defaultWidth) : Document =
        pretty (group (toDoc (astNode)), w)
    
    def toDoc (astNode : ASTNode) : Doc =
        astNode match {
            case v @ Program (v1) =>
                emptyDoc <> ssep (v1.map (toDoc), emptyDoc) <> emptyDoc 
            case v @ Decl (v1, v2) =>
                line <> toDoc (v1) <> toDoc (v2) 
            case v @ IntType () =>
                text ("int") <> space 
            case v @ ByteType () =>
                text ("byte") <> space 
            case v @ BoolType () =>
                text ("bool") <> space   
            case v @ Loc (v1) =>
                value (v1) 
        }
    

}

object WhileyIPrettyPrinter extends WhileyIPrettyPrinter

