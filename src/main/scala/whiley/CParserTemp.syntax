module whiley.CI;

header {
    import whiley.CISyntax.*;
}

Program =
    Spacing Stm* EOF.

Stm {line} = 
    Type Loc '=' Exp ';'                          {DeclAsgnC}
  | Type Loc ';'                                  {DeclC}
  | Assign                                        {AsgnC}
  | "if" '(' Exp ')' '{' nest (Stm) '}'           {IfC}.

Exp {paren} =
    Exp sp "==" Exp                               {EQ, left, 5}
  | Exp sp "!=" Exp                               {NE, left, 5}
  | Exp sp "<"  Exp                               {LT, left, 4}
  | Exp sp "<=" Exp                               {LE, left, 4}
  | Exp sp ">"  Exp                               {GT, left, 4}
  | Exp sp ">=" Exp                               {GE, left, 4}
  | Exp sp "<<" Exp                               {Lsh, left, 3}
  | Exp sp ">>" Exp                               {ARsh, left, 3}
  | Exp sp "+" Exp                                {Add, left, 2}
  | Exp sp "-" Exp                                {Sub, left, 2}
  | Exp sp "*" Exp                                {Mul, left, 1}
  | Exp sp "/" Exp                                {Div, left, 1}
  | Exp sp "%" Exp                                {Rem, left, 1}
  | '!' Exp                                       {Not}
  | '-' Exp                                       {Neg}
  | Assign
  | Loc                                           {Use}
  | Lit.

Assign : Exp =
    Loc sp '=' Exp ';'.

Type = 
    "char"                                        {CharTypeC}
  | "unsigned char"                               {UnsgnCharTypeC}
  | "signed char"                                 {SgnCharTypeC}
  | "int"                                         {IntTypeC}
  | "unsigned int"                                {UnsgnIntTypeC}
  | "short"                                       {ShortTypeC}
  | "unsigned short"                              {UnsgnShortTypeC}
  | "long"                                        {LongTypeC}
  | "unsigned long"                               {UnsgnLongTypeC}
  | "float"                                       {FloatTypeC}
  | "double"                                      {DoubleTypeC}
  | "long double"                                 {LongDoubleTypeC}
  | "void"                                        {VoidTypeC}.

Lit : Exp =
		NullLiteralC																	{NullLitC}.
//  | IntegerLiteralC                               {IntLitC, 1: Integer.parseInt : Int}
//	| CharacterLiteralC															{CharLitC}.

NullLiteralC =
    "NULL".

Loc = 
    Identifier.

Lab : String =
		Identifier.